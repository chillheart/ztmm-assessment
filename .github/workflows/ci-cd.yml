name: CI/CD Pipeline with Security

on:
  pull_request:
    branches: [ main ]
  schedule:
  # Run comprehensive security scans daily at 2 AM UTC
  - cron: '0 2 * * *'

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test & Quality Assurance
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npm run type-check

    - name: Run unit tests
      run: npm run test:ci

    - name: Run custom security tests
      run: |
        node security-test.js
        node integration-test.js

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: karma-results.xml

  security-scanning:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: test
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        include:
        - scan-type: codeql
          language: javascript
        - scan-type: codeql
          language: typescript
        - scan-type: dependency-check
        - scan-type: retire-js

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    # CodeQL Analysis
    - name: Initialize CodeQL
      if: matrix.scan-type == 'codeql'
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-extended,security-and-quality

    - name: Build for CodeQL
      if: matrix.scan-type == 'codeql'
      run: npm run build --if-present

    - name: Perform CodeQL Analysis
      if: matrix.scan-type == 'codeql'
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

    # OWASP Dependency Check
    - name: Run OWASP Dependency Check
      if: matrix.scan-type == 'dependency-check'
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'ztmm-assessment'
        path: '.'
        format: 'ALL'
        args: >
          --enableRetired --enableExperimental --failOnCVSS 7 --suppression dependency-check-suppressions.xml

    - name: Upload OWASP Dependency Check results
      if: matrix.scan-type == 'dependency-check'
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: reports/dependency-check-report.sarif

    - name: Upload dependency check report
      if: matrix.scan-type == 'dependency-check' && always()
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: reports/

    # Retire.js Scan
    - name: Install and run retire.js
      if: matrix.scan-type == 'retire-js'
      run: |
        npm install -g retire
        retire --path . --outputformat json --outputpath retire-report.json || true
        retire --path . --outputformat text

    - name: Upload retire.js results
      if: matrix.scan-type == 'retire-js' && always()
      uses: actions/upload-artifact@v4
      with:
        name: retire-js-report
        path: retire-report.json

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [ test, security-scanning ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Angular application
      run: npm run build --configuration=production

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: npm test -- --watch=false --browsers=ChromeHeadless --code-coverage

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: coverage/

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [ security-scanning, build ]
    if: always()

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create security summary
      run: |
        echo "# 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📊 Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "- **CodeQL Analysis**: ${{ needs.security-scanning.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **OWASP Dependency Check**: Completed" >> $GITHUB_STEP_SUMMARY
        echo "- **Retire.js Vulnerability Scan**: Completed" >> $GITHUB_STEP_SUMMARY
        echo "- **Custom Security Tests**: Passed in test job" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🔍 Security Reports Available" >> $GITHUB_STEP_SUMMARY
        echo "- Dependency Check Report (artifacts)" >> $GITHUB_STEP_SUMMARY
        echo "- Retire.js Vulnerability Report (artifacts)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📋 Recommendations" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Review any failed security scans above" >> $GITHUB_STEP_SUMMARY
        echo "- ⚠️ Address high and critical vulnerabilities immediately" >> $GITHUB_STEP_SUMMARY
        echo "- 🔄 Update dependencies with known vulnerabilities" >> $GITHUB_STEP_SUMMARY
        echo "- 📈 Monitor security scan results regularly" >> $GITHUB_STEP_SUMMARY
