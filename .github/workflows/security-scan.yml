name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
  # Run security scans daily at 2 AM UTC
  - cron: '0 2 * * *'

jobs:
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'typescript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # Override default queries to include more security-focused rules
        queries: security-extended,security-and-quality

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build --if-present

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  dependency-check:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'ztmm-assessment'
        path: '.'
        format: 'ALL'
        args: >
          --enableRetired --enableExperimental --failOnCVSS 7 --suppression dependency-check-suppressions.xml

    - name: Upload OWASP Dependency Check results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: reports/dependency-check-report.sarif

    - name: Upload dependency check report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: reports/

  retire-js-scan:
    name: Retire.js Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install retire.js
      run: npm install -g retire

    - name: Run retire.js scan
      run: |
        retire --path . --outputformat json --outputpath retire-report.json || true
        retire --path . --outputformat text

    - name: Upload retire.js results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: retire-js-report
        path: retire-report.json

  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit
      run: |
        npm audit --audit-level=moderate --json > npm-audit-report.json || true
        npm audit --audit-level=moderate

    - name: Upload npm audit results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: npm-audit-report
        path: npm-audit-report.json

  security-test:
    name: Custom Security Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run SQL injection prevention tests
      run: node security-test.js

    - name: Run integration security tests
      run: node integration-test.js

    - name: Upload security test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-test-results
        path: |
          security-test-results.log
          integration-test-results.log

  vulnerability-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [ codeql-analysis, dependency-check, retire-js-scan, npm-audit, security-test ]
    if: always()

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create security summary
      run: |
        echo "# Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "## Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "- **CodeQL Analysis**: ${{ needs.codeql-analysis.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **OWASP Dependency Check**: ${{ needs.dependency-check.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Retire.js Scan**: ${{ needs.retire-js-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **NPM Audit**: ${{ needs.npm-audit.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Custom Security Tests**: ${{ needs.security-test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Recommendations" >> $GITHUB_STEP_SUMMARY
        echo "- Review any failed security scans above" >> $GITHUB_STEP_SUMMARY
        echo "- Address high and critical vulnerabilities immediately" >> $GITHUB_STEP_SUMMARY
        echo "- Update dependencies with known vulnerabilities" >> $GITHUB_STEP_SUMMARY
